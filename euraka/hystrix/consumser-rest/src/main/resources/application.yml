
spring:
    application:
        name: eureka-consumer-rest
    cloud:
        loadbalancer:
            retry:
                enabled: true
server:
    port: 9012

eureka:
    instance:
        instance-id: ${spring.cloud.client.ip-address}:${server.port}
        prefer-ip-address: true
    client:
        service-url:
            defaultZone: http://127.0.0.1:9000/eureka/
            # register-with-eureka: false


ribbon:
    ConnectTimeout: 250 #\u8BF7\u6C42\u8FDE\u63A5\u7684\u8D85\u65F6\u65F6\u95F4
    ReadTimeout: 1000 #\u8BF7\u6C42\u5904\u7406\u7684\u8D85\u65F6\u65F6\u95F4
    OkToRetryOnAllOperations: true #\u5BF9\u6240\u6709\u64CD\u4F5C\u8BF7\u6C42\u90FD\u8FDB\u884C\u91CD\u8BD5
    MaxAutoRetriesNextServer: 1 #\u5207\u6362\u5B9E\u4F8B\u7684\u91CD\u8BD5\u6B21\u6570
    MaxAutoRetries: 1 #\u5BF9\u5F53\u524D\u5B9E\u4F8B\u7684\u91CD\u8BD5\u6B21\u6570

hystrix:
    command:
        default:
            execution:
                isolation:
                    # maxConcurrentRequests: 100     # 设置最大信号量上限
                    # strategy: ExecutionIsolationStrategy.SEMAPHORE               #设置hystrix的隔离方式 信号量隔离
                    # strategy: ExecutionIsolationStrategy.THREAD               #设置hystrix的隔离方式 线程池隔离 默认
                    thread:
                        timeoutInMilliseconds: 1000  # \u4FEE\u6539hystix \u8D85\u65F6\u9ED8\u8BA4\u65F6\u95F4\uFF0C\u9ED8\u8BA41\u79D2
            circuitBreaker:
                requestVolumeThreshold: 10 #触发熔断最小请求次数，默认20
                sleepWindowInMilliseconds: 10000 # 断路器打开后，多少秒再去尝试
                errorThresholdPercentage: 50 # 熔断触发的失败请求比率，默认是50
management:
    endpoints:
        web:
            exposure:
                include: '*'  # 访问 127.0.0.1:9002/actuator/hystrix.stream 显示 hystrix 访问流数据
